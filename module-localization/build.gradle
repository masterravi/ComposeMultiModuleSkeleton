plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'

}

android {
    namespace 'com.training.localization'
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {


    implementation project(':module-network')
    implementation project(':module-datastore')
    /**
     * SDK Versions
     */
    def roomVersion= "2.4.2"
    def retrofitVersion = "2.9.0"
    def okHttpVersion = "4.10.0"
    def chuckerVersion = "3.5.2"
    def hiltVersion = "2.41"
    def datastoreVersion = "1.0.0"
    def mockkVersion = "1.12.0"
    def composeVersion = "1.4.3"
    def jUnitVersion = "4.13.2"
    def jUnitExtensionVersion = "1.1.3"
    def espressoVersion = "3.4.0"

    /**
     * Retrofit
     * */
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion")
    implementation("com.squareup.retrofit2:converter-gson:$retrofitVersion")
    implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'



    /**
     * Hilt
     * */
    implementation("com.google.dagger:hilt-android:$hiltVersion")
    kapt("com.google.dagger:hilt-compiler:$hiltVersion")

    /**
     * Preference Datastore
     */
    implementation("androidx.datastore:datastore-preferences:$datastoreVersion")


    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'




    /**
     * Hilt testing
     * */
    androidTestImplementation("com.google.dagger:hilt-android-testing:$hiltVersion")
    testImplementation("com.google.dagger:hilt-android-testing:$hiltVersion")
    kaptAndroidTest("com.google.dagger:hilt-compiler:$hiltVersion")

    /**
     * Mock Api
     * */
    androidTestImplementation("io.mockk:mockk-android:$mockkVersion")
    testImplementation("io.mockk:mockk-android:$mockkVersion")
    testImplementation("io.mockk:mockk")

    /**
     * Test cases
     * */
    androidTestImplementation("androidx.compose.ui:ui-tooling:$composeVersion")
    testImplementation("androidx.arch.core:core-testing:2.1.0")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2")

    /**
     * JUnit
     * */
    testImplementation("junit:junit:$jUnitVersion")
    androidTestImplementation("androidx.test.ext:junit:$jUnitExtensionVersion")

    /**
     * Espresso
     * */
    androidTestImplementation("androidx.test.espresso:espresso-core:$espressoVersion")
    androidTestImplementation("androidx.test.espresso.idling:idling-concurrent:$espressoVersion")

    /**
     * Room
     */
    implementation("androidx.room:room-ktx:$roomVersion")
    kapt("androidx.room:room-compiler:$roomVersion")

    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
}